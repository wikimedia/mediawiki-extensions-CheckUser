{
	"name": "CheckUser",
	"version": "2.5",
	"author": [
		"Tim Starling",
		"Aaron Schulz"
	],
	"url": "https://www.mediawiki.org/wiki/Extension:CheckUser",
	"descriptionmsg": "checkuser-desc",
	"license-name": "GPL-2.0-or-later",
	"type": "specialpage",
	"requires": {
		"MediaWiki": ">= 1.40.0",
		"platform": {
			"ext-openssl": "*"
		}
	},
	"ExtensionMessagesFiles": {
		"CheckUserAliases": "CheckUser.alias.php"
	},
	"config": {
		"CheckUserCIDRLimit": {
			"value": {
				"IPv4": 16,
				"IPv6": 19
			},
			"description": "Shortest CIDR limits that can be checked in any individual range check"
		},
		"CheckUserMaxBlocks": {
			"value": 200,
			"description": "Maximum number of users that can be mass blocked simultaneously"
		},
		"CUPublicKey": {
			"value": "",
			"description": "Public key to encrypt private data that may need to be read later. Generate a public key with something like: `openssl genrsa -out cu.key 2048; openssl rsa -in cu.key -pubout > cu.pub` and paste the contents of cu.pub here."
		},
		"CUDMaxAge": {
			"value": 7776000,
			"description": "How long to keep CheckUser data (in seconds)"
		},
		"CheckUserForceSummary": {
			"value": false,
			"description": "Whether to force checkusers into giving a reason for each check they do through Special:CheckUser."
		},
		"CheckUserCAMultiLock": {
			"value": false,
			"description": "Whether to add a link to Special:MultiLock by CentralAuth to the Special:CheckUser's mass block form. This requires CentralAuth extension to be installed on the wiki. To enable this, set this to an array with a central wiki's database name and an array with the name(s) of the global group(s) to add the link for. Example: [ 'centralDB' => 'metawiki', 'groups' => [ 'steward' ] ]"
		},
		"CheckUserCAtoollink": {
			"value": false,
			"description": "Whether to add links to CentralAuth in Special:CheckUser results"
		},
		"CheckUserGBtoollink": {
			"value": false,
			"description": "Whether to add links for globally blocking accounts shown in Special:CheckUser results"
		},
		"CheckUserLogLogins": {
			"value": false,
			"description": "Whether login attempts should be logged in CheckUser logs"
		},
		"CheckUserLogSuccessfulBotLogins": {
			"value": true,
			"description": "Whether successful login attempts of accounts in the 'bot' user group should be logged in CheckUser logs (assuming wgCheckUserLogLogins is also true)"
		},
		"CheckUserEnableSpecialInvestigate": {
			"value": true,
			"description": "Enables Special:Investigate"
		},
		"CheckUserLogAdditionalRights": {
			"value": [],
			"description": "Additional rights to be used when adding CheckUser log entries"
		},
		"CheckUserMaximumRowCount": {
			"value": 5000,
			"description": "Maximum number of rows in cu_changes to be used in any query"
		},
		"CheckUserInvestigateMaximumRowCount": {
			"value": 25000,
			"description": "Maximum number of rows in cu_changes to be grouped in the Compare table query"
		},
		"CheckUserTemporaryAccountMaxAge": {
			"value": 86400,
			"description": "Number of seconds for which the temporary account API response is fresh"
		},
		"CheckUserEventTablesMigrationStage": {
			"value": 3,
			"description": "A flag used as the migration stage to the new cu_private_event and cu_log_event tables. Default is to read and write only from cu_changes. Must only be set as SCHEMA_COMPAT_NEW or SCHEMA_COMPAT_OLD."
		}
	},
	"APIListModules": {
		"checkuser": {
			"class": "MediaWiki\\CheckUser\\Api\\ApiQueryCheckUser",
			"services": [
				"UserIdentityLookup",
				"RevisionLookup",
				"CheckUserLogService",
				"CommentStore"
			]
		},
		"checkuserlog": {
			"class": "MediaWiki\\CheckUser\\Api\\ApiQueryCheckUserLog",
			"services": [
				"CommentStore",
				"CheckUserLogService",
				"UserFactory"
			]
		}
	},
	"RestRoutes": [
		{
			"path": "/checkuser/v0/temporaryaccount/{name}",
			"method": "GET",
			"class": "MediaWiki\\CheckUser\\Api\\Rest\\Handler\\TemporaryAccountHandler",
			"services": [
				"MainConfig",
				"PermissionManager",
				"UserOptionsLookup",
				"UserNameUtils",
				"DBLoadBalancer",
				"ActorStore"
			]
		},
		{
			"path": "/checkuser/v0/temporaryaccount/{name}/revisions/{ids}",
			"method": "GET",
			"class": "MediaWiki\\CheckUser\\Api\\Rest\\Handler\\TemporaryAccountRevisionHandler",
			"services": [
				"MainConfig",
				"PermissionManager",
				"UserOptionsLookup",
				"UserNameUtils",
				"DBLoadBalancer",
				"ActorStore"
			]
		}
	],
	"HookHandlers": {
		"preferences": {
			"class": "MediaWiki\\CheckUser\\HookHandler\\Preferences",
			"services": [ "PermissionManager" ]
		},
		"pageDisplay": {
			"class": "MediaWiki\\CheckUser\\HookHandler\\PageDisplay",
			"services": [
				"PermissionManager",
				"UserOptionsLookup"
			]
		},
		"Hooks": {
			"class": "MediaWiki\\CheckUser\\Hooks"
		}
	},
	"Hooks": {
		"RecentChange_save": "Hooks",
		"EmailUser": "Hooks",
		"User::mailPasswordInternal": "Hooks",
		"LocalUserCreated": "Hooks",
		"UserMergeAccountFields": "MediaWiki\\CheckUser\\Hooks::onUserMergeAccountFields",
		"RenameUserSQL": "MediaWiki\\CheckUser\\Hooks::onRenameUserSQL",
		"LoadExtensionSchemaUpdates": "Hooks",
		"ContributionsToolLinks": "Hooks",
		"PerformRetroactiveAutoblock": "Hooks",
		"AuthManagerLoginAuthenticateAudit": "Hooks",
		"UserLogoutComplete": "Hooks",
		"SpecialPage_initList": "Hooks",
		"UserToolLinksEdit": "Hooks",
		"BeforePageDisplay": "pageDisplay",
		"GetPreferences": "preferences"
	},
	"MessagesDirs": {
		"CheckUser": [
			"i18n",
			"i18n/api"
		]
	},
	"attributes": {
		"EventLogging": {
			"Schemas": {
				"SpecialInvestigate": "/analytics/legacy/specialinvestigate/1.0.0"
			}
		}
	},
	"ResourceModules": {
		"ext.checkUser": {
			"localBasePath": "modules/ext.checkUser",
			"remoteExtPath": "CheckUser/modules/ext.checkUser",
			"packageFiles": [
				"dispatcher.js",
				"checkuser/cidr.js",
				"checkuser/caMultiLock.js",
				"checkuser/checkUserHelper.js",
				"checkuserlog/highlightScroll.js",
				"investigateblock/investigateblock.js",
				"investigate/init.js",
				"investigate/InvestigateMenuSelectWidget.js",
				"investigate/tables.js",
				"investigate/copy.js",
				"investigate/blockform.js",
				"temporaryaccount/init.js",
				"temporaryaccount/makeShowIpButton.js",
				"temporaryaccount/SpecialContributions.js",
				{
					"name": "investigate/message.json",
					"callback": "MediaWiki\\CheckUser\\ToolLinksMessages::getParsedMessage",
					"callbackParam": "checkuser-investigate-compare-toollinks"
				}
			],
			"dependencies": [
				"jquery.tablesorter",
				"oojs-ui-widgets",
				"oojs-ui.styles.icons-editing-core",
				"oojs-ui.styles.icons-editing-advanced",
				"oojs-ui.styles.icons-interactions",
				"oojs-ui.styles.icons-location",
				"oojs-ui.styles.icons-moderation",
				"oojs-ui.styles.icons-user",
				"mediawiki.pager.styles",
				"mediawiki.storage",
				"mediawiki.Title",
				"mediawiki.Uri",
				"mediawiki.util",
				"mediawiki.widgets",
				"web2017-polyfills"
			],
			"messages": [
				"checkuser-centralauth-multilock",
				"checkuser-centralauth-multilock-list",
				"checkuser-centralauth-multilock-list-item",
				"checkuser-cidr-too-small",
				"checkuser-cidr-affected-ips",
				"checkuser-helper-copy-success",
				"checkuser-helper-copy-failed",
				"checkuser-helper-user",
				"checkuser-helper-ips",
				"checkuser-helper-uas",
				"checkuser-helper-xff-trusted",
				"checkuser-helper-xff-untrusted",
				"checkuser-investigate-compare-copy-button-label",
				"checkuser-investigate-compare-copy-button-label-hide",
				"checkuser-investigate-compare-copy-message-label",
				"checkuser-investigate-compare-table-button-add-ip-targets-label",
				"checkuser-investigate-compare-table-button-add-user-targets-label",
				"checkuser-investigate-compare-table-button-add-user-targets-log-label",
				"checkuser-investigate-compare-table-button-checks-label",
				"checkuser-investigate-compare-table-button-contribs-label",
				"checkuser-investigate-compare-table-button-filter-label",
				"checkuser-investigate-subtitle-cancel-button-label",
				"checkuser-investigate-subtitle-continue-button-label",
				"checkuser-tempaccount-reveal-ip-button-label",
				"checkuser-tempaccount-reveal-ip-missing"
			]
		},
		"ext.checkUser.styles": {
			"class": "ResourceLoaderLessVarFileModule",
			"localBasePath": "modules/ext.checkUser.styles",
			"remoteExtPath": "CheckUser/modules/ext.checkUser.styles",
			"styles": [
				"checkuser.less",
				"investigate.less",
				"investigateblock.less",
				"temporaryaccount.less"
			],
			"lessMessages": [
				"brackets-start",
				"brackets-end",
				"parentheses-start",
				"parentheses-end",
				"pipe-separator"
			]
		},
		"ext.guidedTour.tour.checkuserinvestigateform": {
			"localBasePath": "modules/ext.guidedTour.tour.checkuserinvestigateform",
			"remoteExtPath": "CheckUser/modules/ext.guidedTour.tour.checkuserinvestigateform",
			"scripts": [
				"checkuserinvestigateform.js"
			],
			"dependencies": "ext.guidedTour",
			"messages": [
				"checkuser-investigate-tour-targets-title",
				"checkuser-investigate-tour-targets-desc"
			]
		},
		"ext.guidedTour.tour.checkuserinvestigate": {
			"localBasePath": "modules/ext.guidedTour.tour.checkuserinvestigate",
			"remoteExtPath": "CheckUser/modules/ext.guidedTour.tour.checkuserinvestigate",
			"scripts": [
				"checkuserinvestigate.js"
			],
			"dependencies": [
				"ext.guidedTour",
				"ext.checkUser"
			],
			"messages": [
				"checkuser-investigate-tour-useragents-title",
				"checkuser-investigate-tour-useragents-desc",
				"checkuser-investigate-tour-addusertargets-title",
				"checkuser-investigate-tour-addusertargets-desc",
				"checkuser-investigate-tour-filterip-title",
				"checkuser-investigate-tour-filterip-desc",
				"checkuser-investigate-tour-block-title",
				"checkuser-investigate-tour-block-desc",
				"checkuser-investigate-tour-copywikitext-title",
				"checkuser-investigate-tour-copywikitext-desc"
			]
		}
	},
	"GroupPermissions": {
		"checkuser": {
			"checkuser": true,
			"checkuser-log": true
		}
	},
	"AvailableRights": [
		"checkuser",
		"checkuser-log",
		"checkuser-temporary-account"
	],
	"SpecialPages": {
		"CheckUser": {
			"class": "MediaWiki\\CheckUser\\CheckUser\\SpecialCheckUser",
			"services": [
				"LinkBatchFactory",
				"BlockPermissionCheckerFactory",
				"BlockUserFactory",
				"UserGroupManager",
				"CentralIdLookupFactory",
				"WikiPageFactory",
				"PermissionManager",
				"UserIdentityLookup",
				"CheckUserTokenQueryManager",
				"DBLoadBalancer",
				"ActorMigration",
				"UserFactory",
				"RevisionStore",
				"CheckUserLogService",
				"CommentFormatter",
				"UserEditTracker",
				"UserNamePrefixSearch",
				"UserNameUtils",
				"CheckUserHookRunner",
				"CheckUserUtilityService",
				"CommentStore"
			]
		},
		"CheckUserLog": {
			"class": "MediaWiki\\CheckUser\\CheckUser\\SpecialCheckUserLog",
			"services": [
				"LinkBatchFactory",
				"PermissionManager",
				"CommentStore",
				"CommentFormatter",
				"CheckUserLogService"
			]
		}
	},
	"AutoloadClasses": {
		"PopulateCheckUserTable": "maintenance/populateCheckUserTable.php",
		"MediaWiki\\CheckUser\\Maintenance\\PurgeOldData": "maintenance/purgeOldData.php",
		"MediaWiki\\CheckUser\\Maintenance\\PopulateCucActor": "maintenance/populateCucActor.php",
		"MediaWiki\\CheckUser\\Maintenance\\PopulateCucComment": "maintenance/populateCucComment.php",
		"MediaWiki\\CheckUser\\Maintenance\\PopulateCulActor": "maintenance/populateCulActor.php",
		"MediaWiki\\CheckUser\\Maintenance\\PopulateCulComment": "maintenance/populateCulComment.php",
		"MediaWiki\\CheckUser\\Maintenance\\MoveLogEntriesFromCuChanges": "maintenance/moveLogEntriesFromCuChanges.php"
	},
	"ServiceWiringFiles": [
		"src/ServiceWiring.php"
	],
	"AutoloadNamespaces": {
		"MediaWiki\\CheckUser\\": "src/"
	},
	"TestAutoloadNamespaces": {
		"MediaWiki\\CheckUser\\Test\\": "tests/phpunit/"
	},
	"load_composer_autoloader": true,
	"manifest_version": 2
}
